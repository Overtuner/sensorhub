Sensorhub in a nut shell - just a very basic documentation 

- What do i need:
1) A server ( i took the raspberry pi )
   With this hardware:
   - nRF24L01 wireless module
   With this software
   - Gnu c++ compiler
   - SQlite3 Database
   - rf24network (i found it here: https://github.com/farconada/RF24Network) (Doc: http://maniacbug.github.io/RF24Network/index.html)
   - a webserver (i use apache2) if you want to use the webinterface
2) A number of nodes 
   Minimal Hardware:
   - ATmega328P
   - nRF24L01 wireless module
   - opt: a sensor of your choice (or just simple a LED and a resistor to test a remote LED)
   - a battery to power it
3) A computer with the Arduino software (www.arduino.cc) to progrann the nodes

- How do i set it up
server:
1) install all required software
2) install the wireless module and make shure you have this files: "/dev/spidev0.0" "/dev/spidev0.1"
3) go to you sensorhub dir and run 
3.a) "git init"; "git pull https://github.com/wilmsn/sensornet.git"
3.b) "make"
4) if everything is OK run "sudo make install"
4a) you can control this service with "sudo service sensorhub <option>" option is one of "start" "stop" "clearlog"
5) configure the database, setup webpage, ...
node:
1) take some hardware and build it together
2) take a template from arduino folder and change it to your needs
3) programm the node using a USBASP adapter (Details here: http://www.fischl.de/usbasp/)

Details:

----- to be compleated ----

Database structure:

Table to entry data by the administrator:
Table "Node"
  Enter one line for each sensor. Remember one node can host several sensors.
Column "Node"
  Enter the address of the node.
Column "Sensor"
  Enter the address of the sensor.
Column "Sensor_Type" 
  Enter the type of the sensor.
  Implemented types:
  1   ==> One Value will be stored every hour in table "sensor". If the hub receives more than one value, the newer one will overwrite the older one.
  2   ==> (not implemented) One Value will be stored every day in table "sensor". If the hub receives more than one value, the newer one will overwrite the older one.
  10  ==> This sensor is a receiver. No value will be stored in table "sensor".

Other Table, data will be entered by the software:
Table "Sensor"
  Will store historical Data from the sensors as configured in table "node"
Column "Year" 
  The year.
Column "Month" 
  The month.
Column "Day" 
  The day.
Column "Hour" 
  The hour if the sensor is type "1". If sensor is type "2" the value "0" will be stored.
Column "Sensor" 
  The number of the sensor.
Column "Value" 
  The value delivered by the sensor, always as float.

Table "Sensor"
  Will the last data received from any sensor that is configured in table "node"
Column "Sensor" 
  The number of the sensor.
Column "Value" 
  The value delivered by the sensor, always as float.
Column "Timestamp"
  The delivery time as GMT (one hour back to german time) 

Table "Queue"
  Will store the data to deliver to the sensor (type 10) until the delivery is commited by the sensor.
  After the sensor sends a feedback (his number and the delivered value) the entry will be deleted.
Column "Sensor" 
  The number of the sensor.
Column "Value" 
  The value to delivered to the sensor, always as float.




